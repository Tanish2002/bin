#!/bin/sh
#
# http://github.com/mitchweaver/bin
#
# nicely display current song from mpvctl (also in bin)
#

artist=$("$HOME"/bin/mpvctl -k artist)
title=$("$HOME"/bin/mpvctl -k title)
filename=$("$HOME"/bin/mpvctl -k filename)

[ -f /tmp/playing ] && touch /tmp/playing && current=$(tail -n1 /tmp/playing)

handle_youtube() {
	# Get url
	url=$1
	playing=$(curl -sL "https://youtube.com/oembed?url=$url" | jq -r '.title')

	check_playback "$playing"

	# Send A nice notification with image
	rm -f /tmp/image.jpg
	video_id=$(printf '%s' "$url" | sed 's/https:\/\/youtube.com\/watch?v=//g')
	curl -sL "https://img.youtube.com/vi/${video_id}/hqdefault.jpg" -o /tmp/image.jpg
	notify-send -i "/tmp/image.jpg" "${playing}"
}

check_playback() {
	playing=$1
	# Check if it's already playing
	[ "$current" = "$playing" ] && exit
	# Print it and store it in playing
	[ "$playing" ] && printf '%s\n' "$playing" >>/tmp/playing && printf '%s\n' "$playing"
}

if [ "$artist" != null ] || [ "$title" != null ]; then
	if [ "$artist" != null ] && [ "$title" != null ]; then # If we have both artist and title info.
		playing=$(printf '%s - %s\n' "$artist" "$title")
	elif [ "$title" != null ]; then # If we only have the title
		playing=$(printf '%s\n' "$title")
	fi

	check_playback "$playing"

else
	res=$filename
	case $res in
	*'.'*)
		# must be a local file
		playing=$(printf '%s\n' "$res")

		check_playback "$playing"
		;;
		# ytdl is weird we sometimes get watch?v=video_id and just plain video_id sometimes (ig this could be a youtube problem, tho idk)
	watch?v*)
		# Get url
		url="https://youtube.com/$res"
		handle_youtube "$url"
		;;
	*)
		# youtube watch codes are always 11 chars long
		if [ ${#res} -eq 11 ]; then
			url="https://youtube.com/watch?v=$res"
			handle_youtube "$url"
		else # Last fallback is to just show whatever is playing
			playing=$(printf '%s\n' "$res")

			check_playback "$playing"
		fi
		;;
	esac
fi
